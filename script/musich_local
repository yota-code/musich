#!/usr/bin/env python3

import os

import cherrypy

from cc_pathlib import Path

import musich.local
import musich.catalog
import musich.queue
import musich.player

root_dir = Path(os.environ["MUSICH_root_DIR"]).resolve()
static_dir = Path(os.environ["MUSICH_static_DIR"]).resolve()

cherrypy.config.update({
	'server.socket_host': os.environ["MUSICH_ip_ADDR"],
	'server.socket_port': 2**15 + 1024*5 + 80, # = 37968
}) # global config
	
musich_config = {
	'/': {
		'tools.staticdir.root': str(root_dir),
	},
	'/_static' : {
		'tools.staticdir.on': True,
		'tools.staticdir.dir': "static",
	}
}

m_catalog = musich.catalog.MusichCatalog()

# fake queue 
p_lst = sorted(list(m_catalog.file_map))[:9]
p_pth = Path(os.environ["MUSICH_catalog_DIR"]).resolve() / ".database" / "queue.json"
p_pth.save({
	'prev': p_lst[:4],
	'next': p_lst[4:]
})

with musich.queue.MusichQueue() as m_queue :
	m_player = musich.player.MusichPlayer(m_queue, m_catalog)

	cherrypy.engine.subscribe('stop', m_player.g_stop)

	m_local = musich.local.MusichLocal(static_dir, m_queue, m_catalog, m_player)

	cherrypy.tree.mount(m_local, '/mlocal', config=musich_config)

	cherrypy.engine.start()
	
	m_player.g_block()
	cherrypy.engine.block()
		
